{"ast":null,"code":"var _jsxFileName = \"/Users/andrewwhitmore/Documents/GitHub/chat-app/client/src/components/Chat/Chat.jsx\";\nimport React, { Component, useEffect, useState } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nlet socket; // export default class Chat extends Component {\n//     constructor(props) {\n//         super(props)\n//         this.state = {\n//         }\n//     }\n//     // useEffect = ((location) =>{\n//     //     const data = queryString.parse(location.search)\n//     //     console.log(location.search);\n//     //     console.log(data);\n//     // });\n//     componentDidMount(){\n//         useEffect((location) =>{\n//         })\n//     }\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 <h1>Chat</h1>\n//             </div>\n//         )\n//     }\n// }\n\nconst Chat = ({\n  location\n}) => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = 'localhost:5000';\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search); //Sanity checks to see if we're getting room and name back in console\n\n    console.log(location.search);\n    setName(name);\n    setRoom(room); //TODO: Finish socket.emit function\n    //  socket.emit('join',{name,room});\n\n    socket = io(ENDPOINT); //send name and room to server side\n\n    socket.emit('join', {\n      name,\n      room\n    }, () => {});\n    console.log(socket);\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages.push([...messages, message]);\n    }, [messages]);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"outerContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/Users/andrewwhitmore/Documents/GitHub/chat-app/client/src/components/Chat/Chat.jsx"],"names":["React","Component","useEffect","useState","queryString","io","socket","Chat","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","ENDPOINT","parse","search","console","log","emit","off","on","push"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,SAA1B,EAAoCC,QAApC,QAAmD,OAAnD;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,IAAIC,MAAJ,C,CAEA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGC,MAAMC,IAAI,GAAC,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AACtB,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBP,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACQ,IAAD,EAAMC,OAAN,IAAiBT,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACU,OAAD,EAASC,UAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACY,QAAD,EAAUC,WAAV,IAAuBb,QAAQ,CAAC,EAAD,CAArC;AACA,QAAMc,QAAQ,GAAG,gBAAjB;AACAf,EAAAA,SAAS,CAAC,MAAK;AACX,UAAM;AAACO,MAAAA,IAAD;AAAME,MAAAA;AAAN,QAAcP,WAAW,CAACc,KAAZ,CAAkBV,QAAQ,CAACW,MAA3B,CAApB,CADW,CAEX;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYb,QAAQ,CAACW,MAArB;AAGAT,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP,CAPW,CAQpB;AACQ;;AAGCL,IAAAA,MAAM,GAAGD,EAAE,CAACY,QAAD,CAAX,CAZW,CAcX;;AACAX,IAAAA,MAAM,CAACgB,IAAP,CAAY,MAAZ,EAAmB;AAACb,MAAAA,IAAD;AAAME,MAAAA;AAAN,KAAnB,EAAgC,MAAI,CAGnC,CAHD;AAMAS,IAAAA,OAAO,CAACC,GAAR,CAAYf,MAAZ;AACA,WAAO,MAAI;AACPA,MAAAA,MAAM,CAACgB,IAAP,CAAY,YAAZ;AACAhB,MAAAA,MAAM,CAACiB,GAAP;AACH,KAHD;AAOH,GA7BQ,EA6BP,CAACN,QAAD,EAAUT,QAAQ,CAACW,MAAnB,CA7BO,CAAT;AA+BAjB,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,MAAM,CAACkB,EAAP,CAAU,SAAV,EAAqBX,OAAD,IAAW;AAC3BG,MAAAA,WAAW,CAACS,IAAZ,CAAiB,CAAC,GAAGV,QAAJ,EAAaF,OAAb,CAAjB;AAEH,KAHD,EAGE,CAACE,QAAD,CAHF;AAIH,GALQ,CAAT;AAOD,sBACI;AAAK,IAAA,SAAS,EAAE,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAE,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAQH,CApDA;;AAsDD,eAAeR,IAAf","sourcesContent":["import React, { Component,useEffect,useState} from 'react'\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nlet socket;\n\n// export default class Chat extends Component {\n//     constructor(props) {\n//         super(props)\n    \n//         this.state = {\n    \n             \n//         }\n//     }\n//     // useEffect = ((location) =>{\n//     //     const data = queryString.parse(location.search)\n//     //     console.log(location.search);\n//     //     console.log(data);\n//     // });\n//     componentDidMount(){\n//         useEffect((location) =>{\n\n//         })\n//     }\n\n       \n\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 <h1>Chat</h1>\n//             </div>\n//         )\n//     }\n// }\n\n\n const Chat=({location}) =>{\n     const [name,setName] = useState('');\n     const [room,setRoom] = useState('');\n     const [message,setMessage]= useState(\"\");\n     const [messages,setMessages]=useState([]);\n     const ENDPOINT  ='localhost:5000'\n     useEffect(() =>{\n         const {name,room} = queryString.parse(location.search)\n         //Sanity checks to see if we're getting room and name back in console\n         console.log(location.search);\n        \n\n         setName(name);\n         setRoom(room);\n//TODO: Finish socket.emit function\n        //  socket.emit('join',{name,room});\n\n\n         socket = io(ENDPOINT);\n\n         //send name and room to server side\n         socket.emit('join',{name,room}, ()=>{\n             \n\n         });\n\n         \n         console.log(socket)\n         return ()=>{\n             socket.emit('disconnect');\n             socket.off();\n         }\n\n         \n        \n     },[ENDPOINT,location.search])\n\n     useEffect(() => {\n         socket.on('message',(message)=>{\n             setMessages.push([...messages,message])\n\n         },[messages])\n     })\n\n    return (\n        <div className =\"outerContainer\">\n            <div className =\"container\">\n\n            </div>\n\n        </div>\n    )\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}