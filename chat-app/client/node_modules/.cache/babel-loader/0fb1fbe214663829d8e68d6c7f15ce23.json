{"ast":null,"code":"var _jsxFileName = \"/Users/andrewwhitmore/Documents/GitHub/chat-app/client/src/components/Chat/Chat.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport './Chat.css';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\nlet socket; // export default class Chat extends Component {\n//     constructor(props) {\n//         super(props)\n//         this.state = {\n//         }\n//     }\n//     // useEffect = ((location) =>{\n//     //     const data = queryString.parse(location.search)\n//     //     console.log(location.search);\n//     //     console.log(data);\n//     // });\n//     componentDidMount(){\n//         useEffect((location) =>{\n//         })\n//     }\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 <h1>Chat</h1>\n//             </div>\n//         )\n//     }\n// }\n//  const Chat=({location}) =>{\n//      const [name,setName] = useState('');\n//      const [room,setRoom] = useState('');\n//      const [message,setMessage]= useState(\"\");\n//      const [messages,setMessages]=useState([]);\n//      const [users, setUsers] = useState('');\n//      const ENDPOINT  ='localhost:5000'\n//      useEffect(() =>{\n//          const {name,room} = queryString.parse(location.search)\n//          console.log(name,room);\n//          //Sanity checks to see if we're getting room and name back in console\n//          console.log(location.search);\n//         socket = io(ENDPOINT);\n//          setName(name);\n//          setRoom(room);\n// //TODO: Finish socket.emit function\n//         //  socket.emit('join',{name,room});\n//          //send name and room to server side\n//          socket.emit('join',{name,room},() =>{\n//          });\n//          console.log(socket)\n//          return ()=>{\n//              socket.emit('disconnect');\n//              socket.off();\n//          }\n//      },[ENDPOINT,location.search])\n//      useEffect(() => {\n//          socket.on('message',(message)=>{\n//              setMessages([...messages,message])\n//          },[messages])\n//          socket.on(\"roomData\", ({ users }) => {\n//             setUsers(users);\n//           });\n//      },[])\n//      const sendMessage  = (event) =>{\n//          event.preventDefault();\n//          //if statement sends message then clears input field\n//          if (message){\n//              socket.emit('sendMessage',message,()=> setMessage(''));\n//          }\n//      }\n//      console.log(message,messages);\n//     return (\n//         <div className =\"outerContainer\">\n//             <div className =\"container\">\n//                 <InfoBar room ={room}/>\n//                 <Input message ={message} setMessage = {setMessage} sendMessage  = {sendMessage}/>\n//             </div>\n//         </div>\n//     )\n// }\n// export default Chat;\n\nconst Chat = ({\n  location\n}) => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [users, setUsers] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = 'https://project-chat-application.herokuapp.com/';\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    setRoom(room);\n    setName(name);\n    socket.emit('join', {\n      name,\n      room\n    }, error => {\n      if (error) {\n        alert(error);\n      }\n    });\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages(messages => [...messages, message]);\n    });\n    socket.on(\"roomData\", ({\n      users\n    }) => {\n      setUsers(users);\n    });\n  }, []);\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"outerContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InfoBar, {\n    room: room,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    message: message,\n    setMessage: setMessage,\n    sendMessage: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/Users/andrewwhitmore/Documents/GitHub/chat-app/client/src/components/Chat/Chat.jsx"],"names":["React","useEffect","useState","queryString","io","InfoBar","Input","socket","Chat","location","name","setName","room","setRoom","users","setUsers","message","setMessage","messages","setMessages","ENDPOINT","parse","search","emit","error","alert","on","sendMessage","event","preventDefault"],"mappings":"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","sourcesContent":["import React, { useEffect,useState} from 'react'\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport './Chat.css';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input'\nlet socket;\n\n// export default class Chat extends Component {\n//     constructor(props) {\n//         super(props)\n    \n//         this.state = {\n    \n             \n//         }\n//     }\n//     // useEffect = ((location) =>{\n//     //     const data = queryString.parse(location.search)\n//     //     console.log(location.search);\n//     //     console.log(data);\n//     // });\n//     componentDidMount(){\n//         useEffect((location) =>{\n\n//         })\n//     }\n\n       \n\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 <h1>Chat</h1>\n//             </div>\n//         )\n//     }\n// }\n\n\n//  const Chat=({location}) =>{\n//      const [name,setName] = useState('');\n//      const [room,setRoom] = useState('');\n//      const [message,setMessage]= useState(\"\");\n//      const [messages,setMessages]=useState([]);\n//      const [users, setUsers] = useState('');\n//      const ENDPOINT  ='localhost:5000'\n//      useEffect(() =>{\n//          const {name,room} = queryString.parse(location.search)\n//          console.log(name,room);\n//          //Sanity checks to see if we're getting room and name back in console\n//          console.log(location.search);\n//         socket = io(ENDPOINT);\n\n//          setName(name);\n//          setRoom(room);\n// //TODO: Finish socket.emit function\n//         //  socket.emit('join',{name,room});\n\n\n         \n\n//          //send name and room to server side\n//          socket.emit('join',{name,room},() =>{\n\n//          });\n\n         \n//          console.log(socket)\n//          return ()=>{\n//              socket.emit('disconnect');\n//              socket.off();\n//          }\n\n         \n        \n//      },[ENDPOINT,location.search])\n\n//      useEffect(() => {\n//          socket.on('message',(message)=>{\n//              setMessages([...messages,message])\n\n//          },[messages])\n\n//          socket.on(\"roomData\", ({ users }) => {\n//             setUsers(users);\n//           });\n//      },[])\n\n//      const sendMessage  = (event) =>{\n//          event.preventDefault();\n\n//          //if statement sends message then clears input field\n//          if (message){\n//              socket.emit('sendMessage',message,()=> setMessage(''));\n//          }\n         \n//      }\n//      console.log(message,messages);\n//     return (\n//         <div className =\"outerContainer\">\n//             <div className =\"container\">\n//                 <InfoBar room ={room}/>\n//                 <Input message ={message} setMessage = {setMessage} sendMessage  = {sendMessage}/>\n\n//             </div>\n\n//         </div>\n//     )\n// }\n\n\n  \n\n// export default Chat;\n\n\n\n\nconst Chat = ({ location }) => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [users, setUsers] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = 'https://project-chat-application.herokuapp.com/';\n\n  useEffect(() => {\n    const { name, room } = queryString.parse(location.search);\n\n    socket = io(ENDPOINT);\n\n    setRoom(room);\n    setName(name)\n\n    socket.emit('join', { name, room }, (error) => {\n      if(error) {\n        alert(error);\n      }\n    });\n  }, [ENDPOINT, location.search]);\n  \n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages(messages => [ ...messages, message ]);\n    });\n    \n    socket.on(\"roomData\", ({ users }) => {\n      setUsers(users);\n    });\n}, []);\n\n  const sendMessage = (event) => {\n    event.preventDefault();\n\n    if(message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  }\n  \n  return (\n    <div className=\"outerContainer\">\n      <div className=\"container\">\n          <InfoBar room={room} />\n          {/* <Messages messages={messages} name={name} /> */}\n          <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\n      </div>\n      {/* <TextContainer users={users}/> */}\n    </div>\n  );\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}